{"filter":false,"title":"test_boggle.py","tooltip":"/test_boggle.py","undoManager":{"mark":38,"position":38,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["i"],"id":1},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["m"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["p"]},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["o"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["r"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["t"]}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":[" "],"id":2}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":15},"action":"insert","lines":["unittest"],"id":3}],[{"start":{"row":0,"column":15},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["c"]},{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":["l"]},{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"insert","lines":["a"]},{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"insert","lines":["s"]},{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":["s"]}],[{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":[" "],"id":6},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["t"]},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["e"]},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["s"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["t"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["_"]}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["b"],"id":7},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["o"]},{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["g"]},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["g"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["l"]},{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["e"]}],[{"start":{"row":2,"column":17},"end":{"row":2,"column":19},"action":"insert","lines":["()"],"id":8}],[{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":["u"],"id":9},{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["n"]},{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"insert","lines":["i"]},{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["t"]},{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"insert","lines":["t"]},{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":["e"]},{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":["s"]},{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":["t"]}],[{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":["."],"id":10}],[{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"insert","lines":[" "],"id":11}],[{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"remove","lines":[" "],"id":12}],[{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"insert","lines":["T"],"id":13},{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"insert","lines":["E"]},{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"insert","lines":["s"]},{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"insert","lines":["t"]},{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"insert","lines":["c"]},{"start":{"row":2,"column":32},"end":{"row":2,"column":33},"action":"insert","lines":["a"]}],[{"start":{"row":2,"column":32},"end":{"row":2,"column":33},"action":"remove","lines":["a"],"id":14},{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"remove","lines":["c"]},{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"remove","lines":["t"]},{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"remove","lines":["s"]},{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"remove","lines":["E"]}],[{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"insert","lines":["e"],"id":15},{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"insert","lines":["s"]},{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"insert","lines":["t"]}],[{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"remove","lines":["t"],"id":16}],[{"start":{"row":2,"column":27},"end":{"row":2,"column":30},"action":"remove","lines":["Tes"],"id":17},{"start":{"row":2,"column":27},"end":{"row":2,"column":35},"action":"insert","lines":["TestCase"]}],[{"start":{"row":2,"column":36},"end":{"row":2,"column":37},"action":"insert","lines":[":"],"id":18}],[{"start":{"row":2,"column":37},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":19},{"start":{"row":3,"column":0},"end":{"row":3,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":3,"column":4},"end":{"row":3,"column":5},"action":"insert","lines":["d"],"id":20},{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"insert","lines":["e"]},{"start":{"row":3,"column":6},"end":{"row":3,"column":7},"action":"insert","lines":["f"]}],[{"start":{"row":3,"column":7},"end":{"row":3,"column":8},"action":"insert","lines":[" "],"id":21},{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"insert","lines":["t"]},{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["e"]},{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["s"]},{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"insert","lines":["_"],"id":22},{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"insert","lines":["i"]},{"start":{"row":3,"column":14},"end":{"row":3,"column":15},"action":"insert","lines":["s"]},{"start":{"row":3,"column":15},"end":{"row":3,"column":16},"action":"insert","lines":["_"]},{"start":{"row":3,"column":16},"end":{"row":3,"column":17},"action":"insert","lines":["t"]},{"start":{"row":3,"column":17},"end":{"row":3,"column":18},"action":"insert","lines":["h"]},{"start":{"row":3,"column":18},"end":{"row":3,"column":19},"action":"insert","lines":["i"]},{"start":{"row":3,"column":19},"end":{"row":3,"column":20},"action":"insert","lines":["s"]}],[{"start":{"row":3,"column":20},"end":{"row":3,"column":21},"action":"insert","lines":["_"],"id":23},{"start":{"row":3,"column":21},"end":{"row":3,"column":22},"action":"insert","lines":["t"]},{"start":{"row":3,"column":22},"end":{"row":3,"column":23},"action":"insert","lines":["h"]},{"start":{"row":3,"column":23},"end":{"row":3,"column":24},"action":"insert","lines":["i"]},{"start":{"row":3,"column":24},"end":{"row":3,"column":25},"action":"insert","lines":["n"]},{"start":{"row":3,"column":25},"end":{"row":3,"column":26},"action":"insert","lines":["g"]}],[{"start":{"row":3,"column":26},"end":{"row":3,"column":27},"action":"insert","lines":["_"],"id":24},{"start":{"row":3,"column":27},"end":{"row":3,"column":28},"action":"insert","lines":["o"]},{"start":{"row":3,"column":28},"end":{"row":3,"column":29},"action":"insert","lines":["n"]}],[{"start":{"row":3,"column":29},"end":{"row":3,"column":31},"action":"insert","lines":["()"],"id":25}],[{"start":{"row":3,"column":30},"end":{"row":3,"column":31},"action":"insert","lines":["s"],"id":26},{"start":{"row":3,"column":31},"end":{"row":3,"column":32},"action":"insert","lines":["e"]},{"start":{"row":3,"column":32},"end":{"row":3,"column":33},"action":"insert","lines":["l"]},{"start":{"row":3,"column":33},"end":{"row":3,"column":34},"action":"insert","lines":["f"]}],[{"start":{"row":3,"column":35},"end":{"row":3,"column":36},"action":"insert","lines":[":"],"id":27}],[{"start":{"row":3,"column":36},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":28},{"start":{"row":4,"column":0},"end":{"row":4,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"insert","lines":["s"],"id":29},{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"insert","lines":["e"]},{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["f"]}],[{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"remove","lines":["f"],"id":30}],[{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["l"],"id":31},{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"insert","lines":["f"]},{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"insert","lines":["."]},{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"insert","lines":["a"]},{"start":{"row":4,"column":14},"end":{"row":4,"column":15},"action":"insert","lines":["s"]},{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"insert","lines":["s"]},{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["e"]},{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"insert","lines":["r"]},{"start":{"row":4,"column":18},"end":{"row":4,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":4,"column":19},"end":{"row":4,"column":20},"action":"insert","lines":["E"],"id":32},{"start":{"row":4,"column":20},"end":{"row":4,"column":21},"action":"insert","lines":["q"]}],[{"start":{"row":4,"column":13},"end":{"row":4,"column":21},"action":"remove","lines":["assertEq"],"id":33},{"start":{"row":4,"column":13},"end":{"row":4,"column":26},"action":"insert","lines":["assertEqual()"]}],[{"start":{"row":4,"column":25},"end":{"row":4,"column":26},"action":"insert","lines":["1"],"id":34},{"start":{"row":4,"column":26},"end":{"row":4,"column":27},"action":"insert","lines":[","]}],[{"start":{"row":4,"column":27},"end":{"row":4,"column":28},"action":"insert","lines":[" "],"id":35},{"start":{"row":4,"column":28},"end":{"row":4,"column":29},"action":"insert","lines":["0"]}],[{"start":{"row":1,"column":0},"end":{"row":4,"column":30},"action":"remove","lines":["","class test_boggle(unittest.TestCase):","    def test_is_this_thing_on(self):","        self.assertEqual(1, 0)"],"id":36}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["import unittest",""],"id":37},{"start":{"row":0,"column":0},"end":{"row":30,"column":38},"action":"insert","lines":["import unittest","import boggle","","","class TestBoggle(unittest.TestCase):","    \"\"\"","    Our test suite for boggle solver","    \"\"\"","","    def test_can_create_an_empty_grid(self):","        \"\"\"","        Test to see if we can create an empty grid","        \"\"\"","        grid = boggle.make_grid(0, 0)","        self.assertEqual(len(grid), 0)","    ","    def test_grid_size_width_times_height(self):","        \"\"\"","        Test is to ensure that the total size of the grid","        is equal to width * height","        \"\"\"","        grid = boggle.make_grid(2, 3)","        self.assertEqual(len(grid), 6)","    ","    def test_grid_coordinates(self):","        grid = boggle.make_grid(2, 2)","        self.assertIn((0, 0), grid)","        self.assertIn((0, 1), grid)","        self.assertIn((1, 0), grid)","        self.assertIn((1, 1), grid)","        self.assertNotIn((2, 2), grid)"]}],[{"start":{"row":0,"column":0},"end":{"row":30,"column":38},"action":"remove","lines":["import unittest","import boggle","","","class TestBoggle(unittest.TestCase):","    \"\"\"","    Our test suite for boggle solver","    \"\"\"","","    def test_can_create_an_empty_grid(self):","        \"\"\"","        Test to see if we can create an empty grid","        \"\"\"","        grid = boggle.make_grid(0, 0)","        self.assertEqual(len(grid), 0)","    ","    def test_grid_size_width_times_height(self):","        \"\"\"","        Test is to ensure that the total size of the grid","        is equal to width * height","        \"\"\"","        grid = boggle.make_grid(2, 3)","        self.assertEqual(len(grid), 6)","    ","    def test_grid_coordinates(self):","        grid = boggle.make_grid(2, 2)","        self.assertIn((0, 0), grid)","        self.assertIn((0, 1), grid)","        self.assertIn((1, 0), grid)","        self.assertIn((1, 1), grid)","        self.assertNotIn((2, 2), grid)"],"id":38}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":50},"action":"insert","lines":["import unittest","import boggle","from string import ascii_uppercase","","","class TestBoggle(unittest.TestCase):","    \"\"\"","    Our test suite for boggle solver","    \"\"\"","","    def test_can_create_an_empty_grid(self):","        \"\"\"","        Test to see if we can create an empty grid","        \"\"\"","        grid = boggle.make_grid(0, 0)","        self.assertEqual(len(grid), 0)","    ","    def test_grid_size_width_times_height(self):","        \"\"\"","        Test is to ensure that the total size of the grid","        is equal to width * height","        \"\"\"","        grid = boggle.make_grid(2, 3)","        self.assertEqual(len(grid), 6)","    ","    def test_grid_coordinates(self):","        grid = boggle.make_grid(2, 2)","        self.assertIn((0, 0), grid)","        self.assertIn((0, 1), grid)","        self.assertIn((1, 0), grid)","        self.assertIn((1, 1), grid)","        self.assertNotIn((2, 2), grid)","    ","    def test_grid_is_filled_with_letters(self):","        \"\"\"","        Ensure that each of the coordinates in the grid","        contains letters","        \"\"\"","        grid = boggle.make_grid(2, 3)","        for letter in grid.values():","            self.assertIn(letter, ascii_uppercase)"],"id":39}]]},"ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":40,"column":50},"end":{"row":40,"column":50},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":11,"state":"qqstring3","mode":"ace/mode/python"}},"timestamp":1564402275175,"hash":"5388dd42deacbf42386c0d97e25449de022e0ae8"}